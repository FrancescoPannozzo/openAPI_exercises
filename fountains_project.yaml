openapi: 3.0.1
info:
  title: Fountains Project
  description: |
    This API allows to tracking public funtains in Rome, having some feedback on it
  version: 1.0.0
paths:
  /fountains/:
    get:
      summary: Get all fountains around specificates coordinates
      description: |
        Get all fountains by giving two coordinates, lat and lon
      parameters:
        - $ref: "#/components/parameters/lat"
        - $ref: "#/components/parameters/lon"
      responses:
        "200":
          description: Downloaded all the proximity fountains
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/fountain"
    post:
      summary: Upload a single fountain
      description: |
        The client can add a single fountain not present in the app map,
        Client can do this by giving coordinates lat e lon
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/fountain"
      responses:
        "201":
          description: Created a fountain correctely
        "403":
          description: Error, the coordinates are not corrects
        "404":
          description: Error, fountain not found
  /fountains/{id}:
    parameters:
    - name: id
      in: path
      required: true
      description: this is the fountain id
      schema:
        type: integer
        description: e.g., /fountains/1234
    put:
      summary: Update a working/not working fountain or his position
      description: |
        The client can give a feedback about a fountain working or not working.
        The client can also change the fountain position
      parameters:
        - name: isworking
          in: query
          required: true
          description: The working status of the fountain
          schema:
            $ref: "#/components/schemas/fountainStatus"
        - $ref: "#/components/parameters/lat"
        - $ref: "#/components/parameters/lon"
      responses:
        "204":
          description: Update done, everything ok
        "404":
          description: Fountain not found
    delete:
      summary: Delete a fountain
      description: |
        The client can give the fountain id to delete it
      responses:
        "204":
          description: Fountain deleted, everything ok
        "404":
          description: Error, fountain not found
        
components:
  parameters:
    lat:
      name: lat
      in: query
      required: true
      description: latitude given by the client
      schema:
        $ref: "#/components/schemas/lat"
    lon:
      name: lon
      in: query
      required: true
      description: longitude given by the client
      schema:
        $ref: "#/components/schemas/lon"
  schemas:
    id:
      description: |
        The ID of the fountain
      type: integer
    lat:
      type: number
      minimum: -90
      maximum: 90
    lon:
      type: number
      maximum: 180
      minimum: -180
    fountainCategory:
      description: |
        The type of the fountain (fontanella/nasone)
      type: string
      enum:
      - fontanella
      - nasone
    fountainStatus:
      description: |
        The working status of the fountain (good/faulty)
      type: string
      enum:
      - good
      - faulty
    fountain:
      description: |
        A fountain object, it defines a fountain ID, latitude and longitude positions,
        The status (good/falulty) and the typo (fontanella/nasone)
      type: object
      properties:
        fountainID:
          $ref: "#/components/schemas/id"
        lat:
          $ref: "#/components/parameters/lat"
        lon:
          $ref: "#/components/parameters/lon"
        fountainCategory:
          $ref: "#/components/schemas/fountainCategory"
        fountainStatus:
          $ref: "#/components/schemas/fountainStatus"
          
